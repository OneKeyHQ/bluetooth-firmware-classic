name: Build App and DFU
on:
  workflow_dispatch:

jobs:
  build:
    name: "build"
    runs-on: ubuntu-latest
    env:
      GNU_INSTALL_ROOT: "/usr/bin/"
      GNU_VERSION: "9.2.1"
      GNU_PREFIX: "arm-none-eabi"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt install curl wget build-essential libtool gcc-arm-none-eabi
          # sudo apt install python3 python3-pip python-is-python3
          # sudo pip install nrfutil

      - name: Populate vars
        id: vars
        run: |
          echo "build_date=$(date +"%Y%m%d")" >> $GITHUB_OUTPUT
          echo "short_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "fw_revision=$(sed -n 's/^#define FW_REVISION\s*"\(.*\)"/\1/p' app/firmware_config.h)" >> $GITHUB_OUTPUT
          echo "artifacts_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"" >> $GITHUB_OUTPUT

      - name: Build micro-ecc
        run: |
          export TOP_DIR=$(pwd)
          cd ble-firmware/external/micro-ecc/
          make -C nrf52hf_armgcc/armgcc
          cd $TOP_DIR

      - name: Build dfu
        run: |
          export TOP_DIR=$(pwd)
          cd dfu
          make -j8
          cd $TOP_DIR

      - name: Build app
        run: |
          export TOP_DIR=$(pwd)
          cd app
          make -j4
          cd $TOP_DIR

      - name: Move and zip artifacts
        run: |
          mkdir artifacts
          mv dfu/_build/nrf52832_xxaa_s132.bin artifacts/dfu.bin
          mv dfu/_build/nrf52832_xxaa_s132.hex artifacts/dfu.hex
          mv app/_build/nrf52832_xxaa.bin artifacts/app.bin
          mv app/_build/nrf52832_xxaa.hex artifacts/app.hex
          # zip -rj artifacts.zip artifacts/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "${{ github.event.repository.name }}-${{ steps.vars.outputs.fw_revision }}-${{ steps.vars.outputs.build_date }}-${{ steps.vars.outputs.short_hash }}"
          path: |
            artifacts/*

      - name: Notify to Slack
        uses: onekeyhq/actions/notice-slack-app-update@main
        with:
          web-hook-url: ${{ secrets.SLACK_DEV_RELEASE_WEBHOOK }}
          artifact-type: CLASSIC-FIRMWARE-BT
          artifact-name: Classic-Hardware-Firmware-BT
          artifact-bundle-id: "so.onekey.firmware.classic.bt"
          artifact-version-name: "${{ steps.vars.outputs.fw_revision }}"
          artifact-version-code: "${{ steps.vars.outputs.short_hash }}"
          artifact-download-url: "${{ steps.vars.outputs.artifacts_url }}"
          change-log: "Download [Artifacts] at the bottom of page."
          custom-issue-url: ""
          custom-message-title: ""
          custom-message-payload: ""
          filter-code: false
